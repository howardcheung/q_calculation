#!/usr/bin/python

import pandas as pd
import pdb

import data_read as dread
import data_summary as ds
import misc_func as misc

filepath = '../Benchmark Tests/normal_complete.csv'
ss_time = 900
tei_name = "TEI"
teo_name = 
tvdot_name
other_t_names =
other_names = 
t_toler = 
rel_toler = 
df_option = dread.read_csv_option(filepath)
df_option = dread.unit_convert(df_option, [
    'TEI', 'TEO', 'TCI', 'TCO', 'TWE_set', 'TBO', 'TSI'
])
df_option = dread.unit_convert(df_option, ['FWE', 'FWC'], 'GPM', 'm3s')
df_option = dread.time_indication(df_option, 'Time')
df_option = dread.fault_allocation(df_option, 'NoF', '0')
df_option = dread.cal_for_ss(
    df_option, 'abs_slope', col_names=[
        'TEI_K', 'TEO_K', 'TCI_K', 'TCO_K', 'TBO_K', 'TSI_K'
    ],
    ss_time=ss_time
)
df_option = dread.cal_for_ss(
    df_option, 'rel_slope', col_names=['FWE_m3s', 'kW', 'FWC_m3s'],
    ss_time=ss_time
)
ss_df_options = dread.ss_identifier(
    df_option, [
        'TEI_K', 'TEO_K', 'TCI_K', 'TCO_K', 'TBO_K', 'TSI_K',
        'FWE_m3s', 'kW', 'FWC_m3s', 'TWE_set_K'
    ], abs_slope_cols=[
        'TEI_K', 'TEO_K', 'TCI_K', 'TCO_K', 'TBO_K', 'TSI_K'
    ], rel_slope_cols=['FWE_m3s', 'kW', 'FWC_m3s'],
    abs_slope_thres=[0.05, 0.05, 0.05, 0.05, 0.05, 0.05], rel_slope_thres=[
        0.1/100.0, 0.1/100.0, 0.1/100.0
    ], deltaT=900, ss_time=900
)
for ss_df_option in ss_df_options:
    for col_name in ['TEI_K', 'TEO_K', 'TCI_K', 'TCO_K', 'TBO_K', 'TSI_K']:
        ss_df_option = ds.append_uncer_to_df(
            ss_df_option, col_name, misc.r2k(0.05), 0.0
        )
    for col_name in ['FWE_m3s', 'FWC_m3s']:
        ss_df_option = ds.append_uncer_to_df(ss_df_option, col_name, 0.0, 0.01)
    ss_df_option = ds.append_uncer_to_df(ss_df_option, 'kW', 0.0, 0.015)
    ss_df_option = ds.data_mean_cal(ss_df_option, [
        'TEI_K', 'TEO_K', 'TCI_K', 'TCO_K', 'TBO_K', 'TSI_K',
        'FWE_m3s', 'kW', 'FWC_m3s', 'TWE_set_K'
    ], alpha=0.95)
    ss_df_option = ds.cal_q_from_sample_result(
        ss_df_option, 'FWE_m3s', 'TBO_K', 'TEO_K', 'TEI_K', hx_name='evap'
    )
    ss_df_option = ds.cal_mdotdeltah_per_time(
        ss_df_option, 'FWE_m3s', 'TBO_K', 'TEO_K', 'TEI_K', hx_name='evap'
    )
    for deltat = range(0, 70, 10):
        ss_df_option = ds.cal_q_from_ind_mea(
            ss_df_option, deltat=delta, hx_name='evap', alpha=0.95
        )